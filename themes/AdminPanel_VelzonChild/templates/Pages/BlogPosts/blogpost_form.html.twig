{# Import Macros #}
{% from '@SyliusResource/Macros/actions.html.twig' import create %}
{% import "@VSApplication/Macros/form.html.twig" as vs_form %}
{% import "@VSApplication/Macros/tree.html.twig" as vs_tree %}

{% if useFormMethod is defined %}{% set formMethod = useFormMethod %}{% else %}{% set formMethod = 'PUT' %}{% endif %}
{{ form_start(form, { 'attr': {'class': 'form-horizontal', 'id': 'form-post'}, 'method': formMethod }) }}
    
    {# {{ dump( tagsWhitelist ) }} #}
    {{ form_widget( form.tagsInputWhitelist, { 'value' : tagsWhitelist | join(',') } ) }}
    
    <div class="form-check form-check-secondary mb-3">
        <input type="checkbox" id="blog_post_form_enabled" name="blog_post_form[enabled]" 
            class="form-check-input"
            {% if form.vars.value.enabled %}checked="checked"{% endif %}
        />
        <label class="form-check-label" for="blog_post_form_enabled">
            {{ 'vankosoft_org.form.published'|trans({}, 'VankoSoftOrg') }}
        </label>
    </div>
    
    <div class="form-group">
        {{ form_label(form.locale, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.locale, {'attr': {'class': 'form-select'}}) }}
    </div>

    {% if item.id %}
        {% set itemId = item.id %}
        {% set selectedCategory = item.category.taxon.id %}
    {% else %}
        {% set itemId = 0 %}
        {% set selectedCategory = '' %}
    {% endif %}
    {% set comboDataSourceUrl  = url('vsorg_blogposts_tree_combo_with_selected', {'postId': itemId, 'taxonomyId': taxonomyId}) %}
    {% set comboTreePlaceholder = 'vankosoft_org.form.category_placeholder' | trans( {},'VankoSoftOrg' ) %}
    {% set comboDataOptions    = "
            url:'" ~ comboDataSourceUrl ~ "',
            required:true,
            prompt:'" ~ comboTreePlaceholder ~"',
            value:'" ~ selectedCategory ~"'
    " %}
    <div class="form-group">
        {{ form_label(form.category_taxon, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        {{ form_widget(form.category_taxon, {
            'attr': {
                'class': 'form-control easyui-combotree',
                'data-options': comboDataOptions
            }
        }) }}
    </div>
    
    <div class="form-group mt-3">
        {% if item.picture %}
            {% set pictureFileName  = item.picture.originalName %}
        {% else %}
            {% set pictureFileName  = 'vankosoft_org.form.blog_post_picture_placeholder'  | trans( {},'VankoSoftOrg' ) %}
        {% endif %}
        
        <label for="blog_post_form_picture" class="form-label">
            {{ 'vankosoft_org.form.blog_post_picture'  | trans( {},'VankoSoftOrg' ) }}
        </label>
        <div class="form-field-file">
            {{ form_widget(form.picture, {'attr': {'class': 'form-control' }}) }}
            {{ form_label(form.picture, pictureFileName, {
                'label_attr': {'class': 'input-group-text'}
                }) 
            }}
        </div>
    </div>

    <div class="form-group">
        {{ form_label(form.title, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.tags, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        
        {{ form_widget(form.tags, {'attr': {'class': 'form-control tagsInput', 'data-role': 'tagsinput'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.text, null, {
            'label_attr': {'class': 'form-label'}
            }) 
        }}
        {{ form_widget(form.text, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    {{ vs_form.buttons( form, metadata is defined ? metadata : null ) }}
{{ form_end(form, {'render_rest': false}) }}